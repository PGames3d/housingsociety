//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file('local.properties')
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader('UTF-8') { reader ->
//        localProperties.load(reader)
//    }
//}
//
//def flutterRoot = localProperties.getProperty('flutter.sdk')
//if (flutterRoot == null) {
//    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
//}
//
//def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
//if (flutterVersionCode == null) {
//    flutterVersionCode = '1'
//}
//
//def flutterVersionName = localProperties.getProperty('flutter.versionName')
//if (flutterVersionName == null) {
//    flutterVersionName = '1.0'
//}
//
//apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
//
//
//// def keystorePropertiesFile = rootProject.file("key.properties")
//// def keystoreProperties = new Properties()
//// keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
//
//android {
//    namespace = "com.bs.housingsociety"
//    compileSdk = 36
//    // ndkVersion = flutter.ndkVersion
//    ndkVersion = "25.1.8937393"
//
//    compileOptions {
//        sourceCompatibility = JavaVersion.toVersion("17")
//        targetCompatibility = JavaVersion.toVersion("17")
//    }
//
//    kotlinOptions {
//        jvmTarget = "17"
//    }
//
//
//    sourceSets {
//        main.java.srcDirs += 'src/main/kotlin'
//    }
//
//    defaultConfig {
//        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//        applicationId "com.bs.housingsociety"
//        minSdk = 23
//        targetSdk = 36
//        versionCode = flutter.versionCode
//        versionName = flutter.versionName
//    }
//
//    // signingConfigs {
//    //     release {
//    //         keyAlias keystoreProperties['keyAlias']
//    //         keyPassword keystoreProperties['keyPassword']
//    //         storeFile file(keystoreProperties['storeFile'])
//    //         storePassword keystoreProperties['storePassword']
//    //     }
//    // }
//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
//        }
//    }
//}
//
//flutter {
//    source '../..'
//}
//
//dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//}


plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.bs.housingsociety"
    compileSdk = 36
    // ndkVersion = flutter.ndkVersion
    ndkVersion = "25.1.8937393"

    compileOptions {
        sourceCompatibility = JavaVersion.toVersion("17")
        targetCompatibility = JavaVersion.toVersion("17")
    }

    kotlinOptions {
        jvmTarget = "17"
    }



    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.bs.housingsociety"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = 36
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildFeatures {
        buildConfig true
    }


    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            // üîê Enable code shrinking and obfuscation
            minifyEnabled true
            shrinkResources false

            // üß© Point to your ProGuard rules
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }

    }


}

dependencies {
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation 'androidx.fragment:fragment:1.3.6'
    implementation 'androidx.appcompat:appcompat:1.7.0'
}

flutter {
    source = "../.."
}
